{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"all.js","sourcesContent":["$.ajaxSetup({\n    headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    }\n});\n\n(function( $ ) {\n    $.widget( \"custom.combobox\", {\n        _create: function() {\n            this.wrapper = $( \"<span>\" )\n                .addClass( \"custom-combobox\" )\n                .insertAfter( this.element );\n\n            this.element.hide();\n            this._createAutocomplete();\n            this._createShowAllButton();\n        },\n\n        _createAutocomplete: function() {\n            var selected = this.element.children( \":selected\" ),\n                value = selected.val() ? selected.text() : \"\";\n\n            this.input = $( \"<input>\" )\n                .appendTo( this.wrapper )\n                .val( value )\n                .attr( \"title\", \"\" )\n                .addClass( \"custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left\" )\n                .autocomplete({\n                    delay: 0,\n                    minLength: 0,\n                    source: $.proxy( this, \"_source\" )\n                })\n                .tooltip({\n                    tooltipClass: \"ui-state-highlight\"\n                });\n\n            this._on( this.input, {\n                autocompleteselect: function( event, ui ) {\n                    ui.item.option.selected = true;\n                    this._trigger( \"select\", event, {\n                        item: ui.item.option\n                    });\n                },\n\n                autocompletechange: function(event, ui) {\n                    this._removeIfInvalid(event, ui);\n                }\n            });\n        },\n\n        _createShowAllButton: function() {\n            var input = this.input,\n                wasOpen = false;\n\n            $( \"<a>\" )\n                .attr( \"tabIndex\", -1 )\n                .attr( \"title\", \"Show All Items\" )\n                .tooltip()\n                .appendTo( this.wrapper )\n                .button({\n                    icons: {\n                        primary: \"ui-icon-triangle-1-s\"\n                    },\n                    text: false\n                })\n                .removeClass( \"ui-corner-all\" )\n                .addClass( \"custom-combobox-toggle ui-corner-right\" )\n                .mousedown(function() {\n                    wasOpen = input.autocomplete( \"widget\" ).is( \":visible\" );\n                })\n                .click(function() {\n                    input.focus();\n\n                    // Close if already visible\n                    if ( wasOpen ) {\n                        return;\n                    }\n\n                    // Pass empty string as value to search for, displaying all results\n                    input.autocomplete( \"search\", \"\" );\n                });\n        },\n\n        _source: function( request, response ) {\n            var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), \"i\" );\n            response( this.element.children( \"option\" ).map(function() {\n                var text = $( this ).text();\n                if ( this.value && ( !request.term || matcher.test(text) ) )\n                    return {\n                        label: text,\n                        value: text,\n                        option: this\n                    };\n            }) );\n        },\n\n        _removeIfInvalid: function( event, ui ) {\n\n            // Selected an item, nothing to do\n            if ( ui.item ) {\n                return;\n            }\n\n            // Search for a match (case-insensitive)\n            var value = this.input.val(),\n                valueLowerCase = value.toLowerCase(),\n                valid = false;\n            this.element.children( \"option\" ).each(function() {\n                if ( $( this ).text().toLowerCase() === valueLowerCase ) {\n                    this.selected = valid = true;\n                    return false;\n                }\n            });\n\n            // Found a match, nothing to do\n            if ( valid ) {\n                return;\n            }\n\n            // Remove invalid value\n            this.input\n                .val( \"\" )\n                .attr( \"title\", value + \" didn't match any item\" )\n                .tooltip( \"open\" );\n            this.element.val( \"\" );\n            this._delay(function() {\n                this.input.tooltip( \"close\" ).attr( \"title\", \"\" );\n            }, 2500 );\n\n            this._trigger( \"onRemoveIfInvalid\", event);\n        },\n\n        _destroy: function() {\n            this.wrapper.remove();\n            this.element.show();\n        }\n    });\n\n\n\n\n})( jQuery );\n\n$( document ).ready(function() {\n    //console.log('this is main');\n});"],"sourceRoot":"/source/"}